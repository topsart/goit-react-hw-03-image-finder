{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/images-api.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","src","alt","ImageGallery","images","onModal","map","id","webformatURL","largeImageURL","onClick","Button","axios","defaults","baseURL","searchQuery","currentPage","get","then","response","data","hits","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","showModal","isLoading","error","toggleModal","handleModalImage","url","onChangeQuery","fetchImages","options","imagesApi","prevState","catch","finally","prevProps","shouldRenderLoadMoreButton","length","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.640f02fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      query: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={this.state.query}\n            onChange={this.handleChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ src, alt }) => (\n  <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n);\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n\nconst ImageGallery = ({ images, onModal }) => (\n  <ul className=\"ImageGallery\">\n    {images.map(({ id, webformatURL, type, largeImageURL }) => (\n      <li\n        key={id}\n        className=\"ImageGalleryItem\"\n        onClick={() => onModal(largeImageURL)}\n      >\n        <ImageGalleryItem src={webformatURL} alt={type} />\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n","import React from \"react\";\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nexport default Button;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api\";\nconst KEY = \"21327574-a9e02909bbc977a72a3d5931a\";\n\nconst fetchImages = ({ searchQuery = \"\", currentPage = 1 }) => {\n  return axios\n    .get(\n      `/?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((response) => response.data.hits);\n};\n\nexport default { fetchImages };\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport imagesApi from \"./services/images-api\";\nimport Modal from \"./components/Modal\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    showModal: false,\n    largeImageURL: null,\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleModalImage = (url) => {\n    this.toggleModal();\n    this.setState({ largeImageURL: url });\n  };\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then((images) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { showModal, images, isLoading, largeImageURL, error } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <div className=\"App\">\n        {error && <h1>There is very bad error!</h1>}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery\n          images={images}\n          onModal={this.handleModalImage}\n          largeImageURL={largeImageURL}\n        />\n        {isLoading && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./Common.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}